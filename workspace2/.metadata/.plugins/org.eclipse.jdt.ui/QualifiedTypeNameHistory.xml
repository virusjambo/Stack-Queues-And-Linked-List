<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.text.Annotation"/>
<fullyQualifiedTypeName name="java.lang.annotation.Target"/>
<fullyQualifiedTypeName name="java.lang.annotation.Annotation"/>
<fullyQualifiedTypeName name="org.apache.commons.jxpath.JXPathContext"/>
<fullyQualifiedTypeName name="java.lang.reflect.Field"/>
<fullyQualifiedTypeName name="PpsrBulkUploadRequest"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="Animal"/>
<fullyQualifiedTypeName name="Dog"/>
<fullyQualifiedTypeName name="java.math.BigDecimal"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.io.BufferedWriter"/>
<fullyQualifiedTypeName name="java.io.FileWriter"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="TestCollection"/>
<fullyQualifiedTypeName name="java.lang.Comparable"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="Generics"/>
<fullyQualifiedTypeName name="javax.xml.soap.Node"/>
<fullyQualifiedTypeName name="java.awt.HeadlessException"/>
<fullyQualifiedTypeName name="singlelinkedlist.LinkedListIntereface"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="java.lang.CloneNotSupportedException"/>
<fullyQualifiedTypeName name="java.lang.Cloneable"/>
<fullyQualifiedTypeName name="JavaRecursion"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="Demo"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="queuesUsingarrays.Queue"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.lang.Deprecated"/>
<fullyQualifiedTypeName name="FindANextgraterInSubarrayofKUsingDeque.FindMaxOfEachSubArray"/>
<fullyQualifiedTypeName name="dequeusingarrays.Dequeue"/>
<fullyQualifiedTypeName name="java.util.ArrayDeque"/>
<fullyQualifiedTypeName name="fromgiventranverseconstucttree.Tree"/>
<fullyQualifiedTypeName name="createtreeusingagivearray.BinaryTree"/>
<fullyQualifiedTypeName name="printleafNodeswithpaths.Tree"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="connectAllNodesAtLevel.Tree.Node"/>
<fullyQualifiedTypeName name="constuctTreeUsingGivenSequence.Tree"/>
<fullyQualifiedTypeName name="TernerySeachTree.TerneryTree.Node"/>
<fullyQualifiedTypeName name="TernerySeachTree.TerneryTree"/>
<fullyQualifiedTypeName name="java.nio.CharBuffer"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="findAllPossibleInterpretationsOfAnArrayOfDigits.Tree"/>
<fullyQualifiedTypeName name="createtreeusingagivearray.Node"/>
</qualifiedTypeNameHistroy>
