package TernerySeachTree;

public class TerneryTree<E,T> {

	public class Node<T>{
		Node<T> low;
		Node<T> high;
		Node<T> equal;
		char value;
		boolean isEnd;
		
		Node (){
			
		}
		Node(char value){
			this.low=null;
			this.high=null;
			this.equal=null;
			this.value=value;
			this.isEnd=false;
		}
		
		
	}
	
	 Node<T> insert(Node<T> root,int index,char [] arr){
		 if(root==null){
			 root=new Node<T>(arr[index]);
			 
			 if(root.value>arr[index])
				 root.low=insert(root,index,arr);
			 else if(root.value<arr[index])
				 root.high=insert(root,index,arr);
			 else{
				 if(index<arr.length)
				 root.equal=insert(root,index+1,arr);
				 else
					root.isEnd=true; 
			 }
				 
					 
		 }
		
		 return root;
	}
	
	
	public static void main(String[] args) {
		TerneryTree<String, Character> tr=new TerneryTree<>();
		String s1="cats";
		tr.insert(null, 0, s1.toCharArray());
	}
}
